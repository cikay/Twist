<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_EksonLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>